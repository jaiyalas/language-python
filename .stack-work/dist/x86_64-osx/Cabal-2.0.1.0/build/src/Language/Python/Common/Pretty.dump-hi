
==================== FINAL INTERFACE ====================
2018-06-23 07:27:23.247897 UTC

interface language-python-0.5.5-551ZWmiBNZ181NDEMfok7Y:Language.Python.Common.Pretty 8022
  interface hash: b1bd3657a2e5b7ccf91cff8225c5532b
  ABI hash: 6e21c42aa69bc1ddac81ab1aa974965d
  export-list hash: 08b6e8d2393383892c529fbfae3c772e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: be78bf9533c0e2cb3fb368531a45f7cf
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.Python.Common.Pretty.commaList
  Language.Python.Common.Pretty.equalsList
  Language.Python.Common.Pretty.parensIf
  Language.Python.Common.Pretty.perhaps
  Language.Python.Common.Pretty.prettyPrefix
  Language.Python.Common.Pretty.prettyText
  Text.PrettyPrint.Annotated.HughesPJ.style
  Text.PrettyPrint.HughesPJ.$$
  Text.PrettyPrint.HughesPJ.$+$
  Text.PrettyPrint.HughesPJ.<+>
  Text.PrettyPrint.HughesPJ.<>
  Text.PrettyPrint.HughesPJ.braces
  Text.PrettyPrint.HughesPJ.brackets
  Text.PrettyPrint.HughesPJ.cat
  Text.PrettyPrint.HughesPJ.char
  Text.PrettyPrint.HughesPJ.colon
  Text.PrettyPrint.HughesPJ.comma
  Text.PrettyPrint.HughesPJ.double
  Text.PrettyPrint.HughesPJ.doubleQuotes
  Text.PrettyPrint.HughesPJ.empty
  Text.PrettyPrint.HughesPJ.equals
  Text.PrettyPrint.HughesPJ.fcat
  Text.PrettyPrint.HughesPJ.float
  Text.PrettyPrint.HughesPJ.fsep
  Text.PrettyPrint.HughesPJ.fullRender
  Text.PrettyPrint.HughesPJ.hang
  Text.PrettyPrint.HughesPJ.hcat
  Text.PrettyPrint.HughesPJ.hsep
  Text.PrettyPrint.HughesPJ.int
  Text.PrettyPrint.HughesPJ.integer
  Text.PrettyPrint.HughesPJ.isEmpty
  Text.PrettyPrint.HughesPJ.lbrace
  Text.PrettyPrint.HughesPJ.lbrack
  Text.PrettyPrint.HughesPJ.lparen
  Text.PrettyPrint.HughesPJ.nest
  Text.PrettyPrint.HughesPJ.parens
  Text.PrettyPrint.HughesPJ.ptext
  Text.PrettyPrint.HughesPJ.punctuate
  Text.PrettyPrint.HughesPJ.quotes
  Text.PrettyPrint.HughesPJ.rational
  Text.PrettyPrint.HughesPJ.rbrace
  Text.PrettyPrint.HughesPJ.rbrack
  Text.PrettyPrint.HughesPJ.render
  Text.PrettyPrint.HughesPJ.renderStyle
  Text.PrettyPrint.HughesPJ.rparen
  Text.PrettyPrint.HughesPJ.semi
  Text.PrettyPrint.HughesPJ.sep
  Text.PrettyPrint.HughesPJ.sizedText
  Text.PrettyPrint.HughesPJ.space
  Text.PrettyPrint.HughesPJ.text
  Text.PrettyPrint.HughesPJ.vcat
  Text.PrettyPrint.HughesPJ.zeroWidthText
  Language.Python.Common.Pretty.Pretty{Language.Python.Common.Pretty.pretty}
  Text.PrettyPrint.Annotated.HughesPJ.Mode{Text.PrettyPrint.Annotated.HughesPJ.LeftMode Text.PrettyPrint.Annotated.HughesPJ.OneLineMode Text.PrettyPrint.Annotated.HughesPJ.PageMode Text.PrettyPrint.Annotated.HughesPJ.ZigZagMode}
  Text.PrettyPrint.Annotated.HughesPJ.Style{Text.PrettyPrint.Annotated.HughesPJ.Style lineLength mode ribbonsPerLine}
  Text.PrettyPrint.Annotated.HughesPJ.TextDetails{Text.PrettyPrint.Annotated.HughesPJ.Chr Text.PrettyPrint.Annotated.HughesPJ.PStr Text.PrettyPrint.Annotated.HughesPJ.Str}
  Text.PrettyPrint.HughesPJ.Doc
module dependencies:
package dependencies: array-0.5.2.0 base-4.10.1.0* deepseq-1.4.3.0
                      ghc-prim-0.5.1.1 integer-gmp-1.0.1.0 pretty-1.1.3.3
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  integer-gmp-1.0.1.0:GHC.Integer.Type 5fa81108482c33b62ec3ac7464eece96
import  -/  pretty-1.1.3.3:Text.PrettyPrint 5da1fa0ca5a74deca5fec93e5f1494b4
import  -/  pretty-1.1.3.3:Text.PrettyPrint.HughesPJ 5687246d91968c1419197b2e272e319d
addDependentFile "/Users/jaiyalas/.stack/programs/x86_64-osx/ghc-8.2.2/lib/ghc-8.2.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-osx/Cabal-2.0.1.0/build/autogen/cabal_macros.h"
966791a55bc80a3e5958da97a36c9f4e
  $fPrettyBool :: Language.Python.Common.Pretty.Pretty GHC.Types.Bool
  DFunId
  {- Arity: 1, Strictness: <S,1*U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.Python.Common.Pretty.$fPrettyBool_$cpretty
                  `cast`
                (Sym (Language.Python.Common.Pretty.N:Pretty[0]
                          <GHC.Types.Bool>_N)) -}
678a2bfebd8772add83270b69064373c
  $fPrettyBool1 :: Text.PrettyPrint.HughesPJ.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Language.Python.Common.Pretty.$fPrettyBool_s
                        0# of ww2 { DEFAULT ->
                 (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                    @ ()
                    (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                       @ ()
                       Language.Python.Common.Pretty.$fPrettyBool2
                       ww2)
                    (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))
                   `cast`
                 (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }) -}
5313f029a08f6c18dd6deeb75c52742c
  $fPrettyBool2 :: Text.PrettyPrint.Annotated.HughesPJ.TextDetails
  {- Strictness: m2,
     Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.Str
                   Language.Python.Common.Pretty.$fPrettyBool_s) -}
4d5a1c0a8cd493c64b4cb5a56cfd725e
  $fPrettyBool3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("True"#) -}
27168aa5a2b71d8756e3e1184a55f837
  $fPrettyBool4 :: Text.PrettyPrint.HughesPJ.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Language.Python.Common.Pretty.$fPrettyBool_s1
                        0# of ww2 { DEFAULT ->
                 (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                    @ ()
                    (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                       @ ()
                       Language.Python.Common.Pretty.$fPrettyBool5
                       ww2)
                    (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))
                   `cast`
                 (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) }) -}
13e6b33db8fd26b22e7af573aa59e6d0
  $fPrettyBool5 :: Text.PrettyPrint.Annotated.HughesPJ.TextDetails
  {- Strictness: m2,
     Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.Str
                   Language.Python.Common.Pretty.$fPrettyBool_s1) -}
4eae9893a261094b6efd91c9fc4938ea
  $fPrettyBool6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("False"#) -}
17462db15d1cc1ebb21336b5bc8fbab5
  $fPrettyBool_$cpretty ::
    GHC.Types.Bool -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Types.Bool) ->
                 case ds of wild {
                   GHC.Types.False -> Language.Python.Common.Pretty.$fPrettyBool4
                   GHC.Types.True -> Language.Python.Common.Pretty.$fPrettyBool1 }) -}
5ed1fa7050e0e54ea2c26aa3e6b0f68a
  $fPrettyBool_s :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.Python.Common.Pretty.$fPrettyBool3) -}
b2f9b176cc1d7d7eb847ae293437e0e6
  $fPrettyBool_s1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.Python.Common.Pretty.$fPrettyBool6) -}
966791a55bc80a3e5958da97a36c9f4e
  $fPrettyDouble ::
    Language.Python.Common.Pretty.Pretty GHC.Types.Double
  DFunId
  {- Arity: 1, Strictness: <S(S),1*U(U)>m3, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Text.PrettyPrint.HughesPJ.double
                  `cast`
                (Sym (Language.Python.Common.Pretty.N:Pretty[0]
                          <GHC.Types.Double>_N)) -}
966791a55bc80a3e5958da97a36c9f4e
  $fPrettyInt :: Language.Python.Common.Pretty.Pretty GHC.Types.Int
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m3,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Text.PrettyPrint.HughesPJ.int
                  `cast`
                (Sym (Language.Python.Common.Pretty.N:Pretty[0]
                          <GHC.Types.Int>_N)) -}
966791a55bc80a3e5958da97a36c9f4e
  $fPrettyInteger ::
    Language.Python.Common.Pretty.Pretty GHC.Integer.Type.Integer
  DFunId
  {- Arity: 1, Strictness: <S,U>m3, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Text.PrettyPrint.HughesPJ.integer
                  `cast`
                (Sym (Language.Python.Common.Pretty.N:Pretty[0]
                          <GHC.Integer.Type.Integer>_N)) -}
966791a55bc80a3e5958da97a36c9f4e
  $fPrettyMaybe ::
    Language.Python.Common.Pretty.Pretty a =>
    Language.Python.Common.Pretty.Pretty (GHC.Base.Maybe a)
  DFunId
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(U)><S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (1, False, True)
                Language.Python.Common.Pretty.$fPrettyMaybe_$cpretty
                  `cast`
                (forall (a :: <*>_N).
                 <Language.Python.Common.Pretty.Pretty a>_R
                 ->_R Sym (Language.Python.Common.Pretty.N:Pretty[0]
                               <GHC.Base.Maybe a>_N)) -}
966791a55bc80a3e5958da97a36c9f4e
  $fPrettyMaybe_$cpretty ::
    Language.Python.Common.Pretty.Pretty a =>
    GHC.Base.Maybe a -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(U)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dPretty :: Language.Python.Common.Pretty.Pretty a)
                   (ds :: GHC.Base.Maybe a) ->
                 case ds of wild {
                   GHC.Base.Nothing
                   -> (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ())
                        `cast`
                      (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0]))
                   GHC.Base.Just x
                   -> $dPretty
                        `cast`
                      (Language.Python.Common.Pretty.N:Pretty[0] <a>_N)
                        x }) -}
966791a55bc80a3e5958da97a36c9f4e
  $fPretty[] :: Language.Python.Common.Pretty.Pretty GHC.Base.String
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>m3,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Text.PrettyPrint.HughesPJ.text
                  `cast`
                (Sym (Language.Python.Common.Pretty.N:Pretty[0]
                          <GHC.Base.String>_N)) -}
8358572305335eb4ecd946c6f0ae3d6f
  $tc'C:Pretty :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8529979694152687617##
                   3864775720301931090##
                   Language.Python.Common.Pretty.$trModule
                   Language.Python.Common.Pretty.$tc'C:Pretty2
                   1#
                   Language.Python.Common.Pretty.$tc'C:Pretty1) -}
1beeed5ea49a7bb4f90fb6589436a2f3
  $tc'C:Pretty1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1be95055f7e0a93fd00f925198027a7e
  $tc'C:Pretty2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.Python.Common.Pretty.$tc'C:Pretty3) -}
9b2474b26bf536cb4e2829831cf39613
  $tc'C:Pretty3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:Pretty"#) -}
788d39bc8ec21b8cd6b2448765881763
  $tcPretty :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10460628794863318602##
                   8752367694391800794##
                   Language.Python.Common.Pretty.$trModule
                   Language.Python.Common.Pretty.$tcPretty2
                   0#
                   Language.Python.Common.Pretty.$tcPretty1) -}
a2e3e5e556ca98ca6a5741a3b43e8025
  $tcPretty1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
759a0732292d725cd9c823caea880556
  $tcPretty2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.Python.Common.Pretty.$tcPretty3) -}
12656c061dd2ae7e254562410ab4944e
  $tcPretty3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Pretty"#) -}
0b6ea3dd18100e78983b1bdeda5d877d
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.Python.Common.Pretty.$trModule3
                   Language.Python.Common.Pretty.$trModule1) -}
f63ff07206b3b39d3f2e234bbe7329fa
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.Python.Common.Pretty.$trModule2) -}
52725d168eae81c8ba7c5ceff9ff3209
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Language.Python.Common.Pretty"#) -}
65f9ba8356f1e3017a6b3ce35ac5d5e9
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Language.Python.Common.Pretty.$trModule4) -}
0fe814ed5f732f640284323b1c90c9d3
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("language-python-0.5.5-551ZWmiBNZ181NDEMfok7Y"#) -}
1d8ec934eb3f98b7625303aca568b96e
  $wprettyPrefix ::
    Language.Python.Common.Pretty.Pretty a =>
    GHC.Prim.Int# -> a -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 3, Strictness: <L,1*C1(U)><S,U><L,U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: Language.Python.Common.Pretty.Pretty a)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: a) ->
                 let {
                   fullText :: GHC.Base.String
                   = Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                       @ ()
                       @ GHC.Base.String
                       Text.PrettyPrint.Annotated.HughesPJ.PageMode
                       Text.PrettyPrint.Annotated.HughesPJ.$fEqDoc3
                       Text.PrettyPrint.Annotated.HughesPJ.$fEqDoc2
                       Language.Python.Common.Pretty.prettyPrefix4
                       (GHC.Types.[] @ GHC.Types.Char)
                       (w `cast` (Language.Python.Common.Pretty.N:Pretty[0] <a>_N) w1)
                         `cast`
                       (Text.PrettyPrint.HughesPJ.N:Doc[0])
                 } in
                 case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        fullText
                        0# of ww2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww2 ww) of wild {
                   GHC.Types.False
                   -> case Language.Python.Common.Pretty.prettyPrefix3 of v { GHC.Types.I# v1 ->
                      let {
                        s :: GHC.Base.String
                        = case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<# 0# ww) of wild1 {
                            GHC.Types.False -> GHC.Types.[] @ GHC.Types.Char
                            GHC.Types.True
                            -> GHC.List.$wunsafeTake @ GHC.Types.Char ww fullText }
                      } in
                      case GHC.List.$wlenAcc @ GHC.Types.Char s 0# of ww1 { DEFAULT ->
                      (Text.PrettyPrint.Annotated.HughesPJ.Beside
                         @ ()
                         (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                            @ ()
                            (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                               @ ()
                               (Text.PrettyPrint.Annotated.HughesPJ.Str s)
                               ww1)
                            (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ()))
                         GHC.Types.True
                         (Text.PrettyPrint.Annotated.HughesPJ.TextBeside
                            @ ()
                            (Text.PrettyPrint.Annotated.HughesPJ.NoAnnot
                               @ ()
                               Language.Python.Common.Pretty.prettyPrefix1
                               v1)
                            (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ())))
                        `cast`
                      (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) } }
                   GHC.Types.True
                   -> (Text.PrettyPrint.Annotated.HughesPJ.text @ () fullText)
                        `cast`
                      (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) } }) -}
966791a55bc80a3e5958da97a36c9f4e
  class Pretty a where
    pretty :: a -> Text.PrettyPrint.HughesPJ.Doc
    {-# MINIMAL pretty #-}
746bc69bcc34900f6fa3164c8caabe31
  commaList ::
    Language.Python.Common.Pretty.Pretty a =>
    [a] -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Language.Python.Common.Pretty.commaList1
                  `cast`
                (forall (a :: <*>_N).
                 <Language.Python.Common.Pretty.Pretty a>_R
                 ->_R <[a]>_R
                 ->_R Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
1cb46c8a1ff4ba1f09e88c0ad33d46de
  commaList1 ::
    Language.Python.Common.Pretty.Pretty a =>
    [a] -> Text.PrettyPrint.Annotated.HughesPJ.Doc ()
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: (\ @ a
                   ($dPretty :: Language.Python.Common.Pretty.Pretty a)
                   (eta :: [a]) ->
                 letrec {
                   go :: [a] -> [Text.PrettyPrint.Annotated.HughesPJ.Doc ()]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [a]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ (Text.PrettyPrint.Annotated.HughesPJ.Doc ())
                       : y ys
                       -> GHC.Types.:
                            @ (Text.PrettyPrint.Annotated.HughesPJ.Doc ())
                            ($dPretty `cast` (Language.Python.Common.Pretty.N:Pretty[0] <a>_N)
                               y)
                              `cast`
                            (Text.PrettyPrint.HughesPJ.N:Doc[0])
                            (go ys) }
                 } in
                 case Text.PrettyPrint.Annotated.HughesPJ.$wreduceHoriz
                        @ ()
                        (Text.PrettyPrint.Annotated.HughesPJ.hsep1
                           @ ()
                           (Text.PrettyPrint.Annotated.HughesPJ.punctuate
                              @ ()
                              Text.PrettyPrint.HughesPJ.comma1
                              (go eta))) of ww { (#,#) ww1 ww2 ->
                 ww2 }) -}
78e9ce0bcd448cb05ca6291cc7a93118
  equalsList ::
    Language.Python.Common.Pretty.Pretty a =>
    [a] -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Language.Python.Common.Pretty.equalsList1
                  `cast`
                (forall (a :: <*>_N).
                 <Language.Python.Common.Pretty.Pretty a>_R
                 ->_R <[a]>_R
                 ->_R Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
a943fe396cfa17e9aceded2a7fb8f36d
  equalsList1 ::
    Language.Python.Common.Pretty.Pretty a =>
    [a] -> Text.PrettyPrint.Annotated.HughesPJ.Doc ()
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: (\ @ a
                   ($dPretty :: Language.Python.Common.Pretty.Pretty a)
                   (eta :: [a]) ->
                 letrec {
                   go :: [a] -> [Text.PrettyPrint.Annotated.HughesPJ.Doc ()]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [a]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ (Text.PrettyPrint.Annotated.HughesPJ.Doc ())
                       : y ys
                       -> GHC.Types.:
                            @ (Text.PrettyPrint.Annotated.HughesPJ.Doc ())
                            ($dPretty `cast` (Language.Python.Common.Pretty.N:Pretty[0] <a>_N)
                               y)
                              `cast`
                            (Text.PrettyPrint.HughesPJ.N:Doc[0])
                            (go ys) }
                 } in
                 case Text.PrettyPrint.Annotated.HughesPJ.$wreduceHoriz
                        @ ()
                        (Text.PrettyPrint.Annotated.HughesPJ.hsep1
                           @ ()
                           (Text.PrettyPrint.Annotated.HughesPJ.punctuate
                              @ ()
                              Language.Python.Common.Pretty.equalsList2
                              (go eta))) of ww { (#,#) ww1 ww2 ->
                 ww2 }) -}
4118c30c8bfdd0e3541964019080b034
  equalsList2 :: Text.PrettyPrint.Annotated.HughesPJ.Doc ()
  {- HasNoCafRefs, Strictness: m7,
     Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.Beside
                   @ ()
                   Text.PrettyPrint.HughesPJ.space1
                   GHC.Types.False
                   Text.PrettyPrint.HughesPJ.equals1) -}
76da70f7c5299bc839be4405b1bfca96
  parensIf ::
    Language.Python.Common.Pretty.Pretty a =>
    (a -> GHC.Types.Bool) -> a -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U)><C(S),1*C1(U)><L,U>,
     Unfolding: (\ @ a
                   ($dPretty :: Language.Python.Common.Pretty.Pretty a)
                   (test :: a -> GHC.Types.Bool)
                   (x :: a) ->
                 case test x of wild {
                   GHC.Types.False
                   -> $dPretty
                        `cast`
                      (Language.Python.Common.Pretty.N:Pretty[0] <a>_N)
                        x
                   GHC.Types.True
                   -> case ($dPretty
                              `cast`
                            (Language.Python.Common.Pretty.N:Pretty[0] <a>_N)
                              x)
                             `cast`
                           (Text.PrettyPrint.HughesPJ.N:Doc[0]) of wild1 {
                        DEFAULT
                        -> (Text.PrettyPrint.Annotated.HughesPJ.Beside
                              @ ()
                              (Text.PrettyPrint.Annotated.HughesPJ.Beside
                                 @ ()
                                 Text.PrettyPrint.HughesPJ.lparen1
                                 GHC.Types.False
                                 wild1)
                              GHC.Types.False
                              Text.PrettyPrint.HughesPJ.maybeParens2)
                             `cast`
                           (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0]))
                        Text.PrettyPrint.Annotated.HughesPJ.Empty
                        -> Language.Python.Common.Pretty.parensIf1
                             `cast`
                           (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0])) } }) -}
38d4a0eaa179e1fd2baffe4c74c34845
  parensIf1 :: Text.PrettyPrint.Annotated.HughesPJ.Doc ()
  {- HasNoCafRefs, Strictness: m7,
     Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.Beside
                   @ ()
                   Text.PrettyPrint.HughesPJ.lparen1
                   GHC.Types.False
                   Text.PrettyPrint.HughesPJ.maybeParens2) -}
d3639618b1f1aa155817de31e83f3177
  perhaps ::
    Language.Python.Common.Pretty.Pretty a =>
    GHC.Base.Maybe a
    -> Text.PrettyPrint.HughesPJ.Doc -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dPretty :: Language.Python.Common.Pretty.Pretty a)
                   (ds :: GHC.Base.Maybe a)
                   (doc :: Text.PrettyPrint.HughesPJ.Doc) ->
                 case ds of wild {
                   GHC.Base.Nothing
                   -> (Text.PrettyPrint.Annotated.HughesPJ.Empty @ ())
                        `cast`
                      (Sym (Text.PrettyPrint.HughesPJ.N:Doc[0]))
                   GHC.Base.Just ds1 -> doc }) -}
1de448da20e8c8f729f447b314cbfd6b
  prettyPrefix ::
    Language.Python.Common.Pretty.Pretty a =>
    GHC.Types.Int -> a -> Text.PrettyPrint.HughesPJ.Doc
  {- Arity: 3, Strictness: <L,1*C1(U)><S(S),1*U(U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: Language.Python.Common.Pretty.Pretty a)
                   (w1 :: GHC.Types.Int)
                   (w2 :: a) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Language.Python.Common.Pretty.$wprettyPrefix @ a w ww1 w2 }) -}
9ce86189807d33939e89e5a9b7d68345
  prettyPrefix1 :: Text.PrettyPrint.Annotated.HughesPJ.TextDetails
  {- Strictness: m2,
     Unfolding: (Text.PrettyPrint.Annotated.HughesPJ.Str
                   Language.Python.Common.Pretty.prettyPrefix_s) -}
aa833fec49a8907d38ff97ff33770ffd
  prettyPrefix2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("..."#) -}
97066b37bbf84578315e23cd762cc5ad
  prettyPrefix3 :: GHC.Types.Int
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Language.Python.Common.Pretty.prettyPrefix_s
                        0# of v { DEFAULT ->
                 GHC.Types.I# v }) -}
c485792f35c930f2b5059e2023f7fd67
  prettyPrefix4 ::
    Text.PrettyPrint.Annotated.HughesPJ.AnnotDetails ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ds :: Text.PrettyPrint.Annotated.HughesPJ.AnnotDetails
                            ())
                   (eta :: GHC.Base.String)[OneShot] ->
                 case ds of wild {
                   DEFAULT -> eta
                   Text.PrettyPrint.Annotated.HughesPJ.NoAnnot s dt1
                   -> case s of wild1 {
                        Text.PrettyPrint.Annotated.HughesPJ.Chr dt
                        -> GHC.Types.: @ GHC.Types.Char (GHC.Types.C# dt) eta
                        Text.PrettyPrint.Annotated.HughesPJ.Str s1
                        -> GHC.Base.++ @ GHC.Types.Char s1 eta
                        Text.PrettyPrint.Annotated.HughesPJ.PStr s1
                        -> GHC.Base.++ @ GHC.Types.Char s1 eta } }) -}
3e11df593a63b841bea8e3e8b7e0cb7f
  prettyPrefix_s :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Language.Python.Common.Pretty.prettyPrefix2) -}
ece2bef18557308399928020f4b9e92f
  prettyText ::
    Language.Python.Common.Pretty.Pretty a => a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*C1(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dPretty :: Language.Python.Common.Pretty.Pretty a)
                   (x :: a) ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Text.PrettyPrint.Annotated.HughesPJ.$fEqDoc3
                   Text.PrettyPrint.Annotated.HughesPJ.$fEqDoc2
                   Language.Python.Common.Pretty.prettyPrefix4
                   (GHC.Types.[] @ GHC.Types.Char)
                   ($dPretty `cast` (Language.Python.Common.Pretty.N:Pretty[0] <a>_N)
                      x)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
instance [safe] Language.Python.Common.Pretty.Pretty [GHC.Types.Bool]
  = Language.Python.Common.Pretty.$fPrettyBool
instance [safe] Language.Python.Common.Pretty.Pretty [GHC.Types.Double]
  = Language.Python.Common.Pretty.$fPrettyDouble
instance [safe] Language.Python.Common.Pretty.Pretty [GHC.Types.Int]
  = Language.Python.Common.Pretty.$fPrettyInt
instance [safe] Language.Python.Common.Pretty.Pretty [GHC.Integer.Type.Integer]
  = Language.Python.Common.Pretty.$fPrettyInteger
instance [safe] Language.Python.Common.Pretty.Pretty [GHC.Base.Maybe]
  = Language.Python.Common.Pretty.$fPrettyMaybe
instance [safe] Language.Python.Common.Pretty.Pretty [[]]
  = Language.Python.Common.Pretty.$fPretty[]
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

